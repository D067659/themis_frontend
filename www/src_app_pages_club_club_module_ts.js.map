{"version":3,"file":"src_app_pages_club_club_module_ts.js","mappings":"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","sources":["./src/app/pages/club/club-routing.module.ts","./src/app/pages/club/club.module.ts","./src/app/pages/club/club.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClubPage } from './club.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClubPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClubPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClubPageRoutingModule } from './club-routing.module';\n\nimport { ClubPage } from './club.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ClubPageRoutingModule\n  ],\n  declarations: [ClubPage]\n})\nexport class ClubPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController, ModalController, ToastController } from '@ionic/angular';\nimport { from } from 'rxjs';\nimport { mergeMap, toArray } from 'rxjs/operators';\nimport { ApiService } from '../../services/api.service';\nimport { Platform } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-club',\n  templateUrl: './club.page.html',\n  styleUrls: ['./club.page.scss'],\n})\n\n\nexport class ClubPage implements OnInit {\n\n  selectedClub = null;\n  clubs = [];\n  players = [];\n  newPlayerForm: FormGroup;\n  playerAlreadyInClub = false;\n\n  constructor(\n    private apiService: ApiService,\n    private alertController: AlertController,\n    public platform: Platform,\n    private modalController: ModalController,\n    private formBuilder: FormBuilder,\n    private toastController: ToastController\n  ) { }\n\n  ngOnInit() {\n    this.loadSetup();\n    this.loadNewPlayerForm();\n  }\n\n  async loadSetup() {\n    this.selectedClub = this.apiService.currentUser.selectedClub;\n\n    if (!this.selectedClub) {\n      this.getPossibleClubs().subscribe((clubs: any) => {\n        this.clubs = clubs;\n        console.log('possible clubs: ', this.clubs);\n        if (this.clubs.length < 2) { this.setSelectedClub(this.clubs[0]); }\n      });\n    } else {\n      this.getPlayersForClub();\n    }\n  }\n\n  getPossibleClubs() {\n    return from(this.apiService.currentUser.clubs).pipe(\n      mergeMap((club: any) => this.apiService.getClubInformation(club.clubId)),\n      toArray()\n    )\n  }\n\n  setSelectedClub(club) {\n    this.selectedClub = club;\n    this.apiService.setSelectedClub(this.selectedClub).then(() => { this.getPlayersForClub(); });\n  }\n\n  resetSelectedClub() {\n    this.selectedClub = null;\n    this.apiService.removeSelectedClub();\n    if (this.clubs.length == 0) {\n      this.getPossibleClubs().subscribe((clubs: any) => { this.clubs = clubs; });\n    }\n  }\n\n  getPlayersForClub() {\n    // Get all possible players for selected club\n    this.apiService.getPlayersForClub(this.apiService.currentUser.selectedClub._id).subscribe((players: any) => {\n      this.players = players\n    });\n  }\n\n  checkForDuplicatedPlayer() {\n    const emailCheck = this.newPlayerForm.get('email').value;\n    this.playerAlreadyInClub = this.players.some((player) => player.email == emailCheck);\n    if (this.playerAlreadyInClub) {\n      this.newPlayerForm.get('email').setErrors(({ 'duplicate': true }));\n    }\n  }\n\n  async submitForm() {\n    this.newPlayerForm.controls[\"clubName\"].setValue(this.selectedClub.name);\n    this.apiService.addPlayerToClub(this.selectedClub._id, this.newPlayerForm.value).subscribe(async (x) => {\n      await this.presentToast();\n      await this.dismissModal();\n    });\n  }\n\n  async promtForDeletion(player) {\n    const alert = await this.alertController.create({\n      header: 'Löschen bestätigen!',\n      message: `Bitte bestätigen, dass Sie ${player.name} aus dem Verein entfernen möchten.`,\n      buttons: [\n        {\n          text: 'Abbrechen',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Bestätigen',\n          cssClass: 'danger',\n          handler: () => {\n            this.removePlayerFromClub(player);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async removePlayerFromClub(player) {\n    this.apiService.removePlayerFromClub(this.apiService.currentUser.selectedClub._id, player._id).subscribe(() => {\n      this.players = this.players.filter(remainingPlayers => remainingPlayers._id !== player._id);\n    });;\n  }\n\n  hasAdminRole() {\n    return this.apiService.hasRoleForClub('admin', this.selectedClub._id);\n  }\n\n  isDesktop() {\n    return this.platform.is('desktop');\n  }\n\n  entryIsMe(player) {\n    return player._id == this.apiService.currentUser._id;\n  }\n\n  loadNewPlayerForm() {\n    this.newPlayerForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(20)]],\n      email: ['', [Validators.required, Validators.email]],\n      // isAdmin: [''] TODO: Maybe we can define admins right on creation, currently it is desired to have this as additional step (like deleting via swipe)\n      clubName: []\n    });\n  }\n\n  get name() {\n    return this.newPlayerForm.get('name');\n  }\n\n  get email() {\n    return this.newPlayerForm.get('email');\n  }\n\n  async dismissModal() {\n    await this.modalController.dismiss();\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'Aktivierungslink erfolgreich versandt',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}