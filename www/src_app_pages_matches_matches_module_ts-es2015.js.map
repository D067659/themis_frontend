{"version":3,"sources":["./src/app/pages/matches/matches-routing.module.ts","./src/app/pages/matches/matches.module.ts","./src/app/pages/matches/matches.page.ts","./src/app/pages/matches/matches.page.scss","./src/app/pages/matches/matches.page.html"],"names":[],"mappings":"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","file":"src_app_pages_matches_matches_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MatchesPage } from './matches.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MatchesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MatchesPageRoutingModule } from './matches-routing.module';\n\nimport { MatchesPage } from './matches.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatchesPageRoutingModule\n  ],\n  declarations: [MatchesPage]\n})\nexport class MatchesPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.page.html',\n  styleUrls: ['./matches.page.scss'],\n})\nexport class MatchesPage implements OnInit {\n\n  selectedClub = null;\n  clubs = [];\n  matches = [];\n  datepickerinput = null;\n  today = 2021;\n\n  constructor(\n    private apiService: ApiService,\n    private toastController: ToastController,\n  ) { }\n\n  ngOnInit() {\n    this.selectedClub = this.apiService.currentUser.selectedClub;\n\n    if (!this.selectedClub) {\n      this.getPossibleClubs()\n\n      if (this.clubs.length == 1) {\n        this.setSelectedClub(this.clubs[0]);\n      }\n    }\n    else {\n      this.getAllMatches()\n    }\n  }\n\n  getPossibleClubs() {\n    for (const club of this.apiService.currentUser.clubs) {\n      this.apiService.getClubInformation(club.clubId).subscribe((club: any) => {\n        this.clubs.push(club)\n      });\n    }\n  }\n\n  setSelectedClub(club) {\n    this.selectedClub = club;\n    this.apiService.currentUser.selectedClub = this.selectedClub;\n    this.getAllMatches()\n  }\n\n  getAllMatches() {\n    this.apiService.getAllMatches(this.selectedClub._id).subscribe((matches: Array<any>) => {\n      // Check for users participation for each match\n      matches.forEach(match => {\n        this.apiService.getParticipationForMatch(match.clubId, match._id).subscribe((participation: any) => {\n          match.doParticipate = participation?.hasTime;\n        })\n      });\n      this.matches = matches\n    });\n  }\n\n  toggleParticipation(match) {\n    match.doParticipate = false;\n  }\n\n  selectParticipation(match) {\n    this.apiService.setParticipationForMatch(match.clubId, match._id, match.doParticipate).subscribe(async (res: any) => {\n      match.isBlocked = true;\n      const answer = res.hasTime ? 'bestätigt' : 'abgelehnt';\n      const toast = await this.toastController.create({\n        message: `Teilnahme wurde ${answer}`,\n        duration: 2000,\n        color: res.hasTime ? 'success' : 'danger'\n      });\n      toast.present();\n\n      toast.onDidDismiss().then(() => {\n        match.isBlocked = false;\n      });\n    })\n  }\n\n  resetSelectedClub() {\n    this.selectedClub = null;\n    this.matches = null;\n  }\n\n  test() {\n    console.log(this.datepickerinput);\n  }\n\n}\n","export default \".center {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 3px;\\n  margin-bottom: 3px;\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FBQ0YiLCJmaWxlIjoibWF0Y2hlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLXRvcDogM3B4O1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title *ngIf=\\\"selectedClub\\\">{{ selectedClub.name }}</ion-title>\\n    <ion-title *ngIf=\\\"!selectedClub\\\">Wähle deinen Verein</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-row>\\n    <ion-col size=\\\"12\\\" size-md='6' offset-md='3'>\\n      <ion-button type=\\\"button\\\" expand=\\\"block\\\" fill=\\\"clear\\\" (click)=\\\"resetSelectedClub()\\\" *ngIf=\\\"selectedClub\\\">\\n        Ausgewählter\\n        Verein ändern\\n      </ion-button>\\n      <ion-grid *ngIf=\\\"!selectedClub\\\">\\n        <ion-list *ngFor=\\\"let club of clubs\\\">\\n          <ion-card button (click)=\\\"setSelectedClub(club)\\\">\\n            <ion-card-content>\\n              {{ club.name }}\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-list>\\n      </ion-grid>\\n\\n      <ion-grid *ngIf=\\\"selectedClub\\\">\\n        <ion-list *ngFor=\\\"let match of matches\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>{{ match.isHome ? 'Heimspiel' : 'Auswärtsspiel' }} gegen {{ match.opponent }}\\n              </ion-card-subtitle>\\n              <ion-card-title>{{ match.startDate | date:'EE, dd.MM.yy' }}</ion-card-title>\\n            </ion-card-header>\\n            <div>\\n              <ion-item text-wrap>\\n                <ion-icon name=\\\"time-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label> {{match.startDate | date:\\\"HH:mm \\\":\\\"+0000\\\"}} Uhr</ion-label>\\n              </ion-item>\\n              <ion-item text-wrap>\\n                <ion-icon name=\\\"flag-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label>{{ match.city }}</ion-label>\\n              </ion-item>\\n              <ion-item text-wrap>\\n                <ion-icon name=\\\"location-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label text-wrap>{{match.meetingPoint }}</ion-label>\\n              </ion-item>\\n            </div>\\n            <div>\\n              <p style=\\\"text-align: center;\\\"><b>Teilnahme</b></p>\\n              <ion-segment [(ngModel)]=\\\"match.doParticipate\\\" (ngModelChange)=\\\"selectParticipation(match)\\\"\\n                color=\\\"primary\\\" scrollable class=\\\"center\\\" [disabled]=\\\"match.isBlocked\\\">\\n                <ion-segment-button value=\\\"true\\\">\\n                  <ion-icon name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n                  <ion-label>Ja</ion-label>\\n                </ion-segment-button>\\n                <ion-segment-button value=\\\"false\\\">\\n                  <ion-label>Nein</ion-label>\\n                  <ion-icon name=\\\"close-circle-outline\\\"></ion-icon>\\n                </ion-segment-button>\\n              </ion-segment>\\n            </div>\\n            <div>\\n            </div>\\n          </ion-card>\\n\\n        </ion-list>\\n        <ion-text class=\\\"center\\\" *ngIf=\\\"matches?.length == 0\\\">Keine bevorstehenden Spiele für {{ selectedClub.name }}\\n          gefunden. </ion-text>\\n      </ion-grid>\\n\\n      <ion-item>\\n        <ion-label>Datum</ion-label>\\n        <ion-datetime displayFormat=\\\"D MMM YYYY H:mm\\\" min=\\\"2021\\\" max=\\\"2023\\\" placeholder=\\\"Datum wählen\\\"\\n          (ionChange)=\\\"test()\\\" [(ngModel)]=\\\"datepickerinput\\\">\\n        </ion-datetime>\\n      </ion-item>\\n\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}